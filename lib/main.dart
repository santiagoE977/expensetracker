import 'package:flutter/material.dart';
import 'screens/home_page.dart';
import 'screens/Category_page.dart';
import 'screens/reports_page.dart';
import 'screens/Setting_page.dart';
import 'screens/login_page.dart'; // 游녣 Importamos la pantalla de login

// Funci칩n principal: punto de entrada de la aplicaci칩n
void main() {
  runApp(const ExpenseTrackerApp()); // Ejecuta la app principal
}

// Widget principal de la aplicaci칩n
class ExpenseTrackerApp extends StatelessWidget {
  const ExpenseTrackerApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Rastreador de gastos', // T칤tulo general de la app
      debugShowCheckedModeBanner: false, // Oculta la etiqueta "debug" del emulador
      theme: ThemeData(
        primarySwatch: Colors.blue, // Paleta de color principal
        useMaterial3: true, // Activa el dise침o Material 3 (m치s moderno)
      ),
      // 游녢 Empieza en la pantalla de Login
      home: const LoginPage(),
    );
  }
}

// Widget que controla la navegaci칩n principal de la app (despu칠s de iniciar sesi칩n)
class MainPage extends StatefulWidget {
  const MainPage({super.key});

  @override
  State<MainPage> createState() => _MainPageState();
}

// Estado de la p치gina principal
class _MainPageState extends State<MainPage> {
  int _currentIndex = 0; // 칈ndice actual de la pesta침a seleccionada

  // Lista de pantallas que se mostrar치n en cada pesta침a
  final List<Widget> _pages =[
    HomePage(),      // Pantalla principal (resumen de gastos, gr치fico, etc.)
    CategoryPage(),  // Pantalla de categor칤as y gastos por categor칤a
    ReportsPage(),   // Pantalla de reportes (gr치fico circular)
    SettingPage(),   // Pantalla de ajustes o configuraci칩n
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: _pages[_currentIndex], // Muestra la pantalla seleccionada

      // Barra de navegaci칩n inferior (BottomNavigationBar)
      bottomNavigationBar: BottomNavigationBar(
        currentIndex: _currentIndex,
        type: BottomNavigationBarType.fixed,
        selectedItemColor: Colors.blue,
        unselectedItemColor: Colors.grey,
        onTap: (index) => setState(() => _currentIndex = index),
        items: const [
          BottomNavigationBarItem(
            icon: Icon(Icons.home),
            label: "Home",
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.category),
            label: "Categor칤as",
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.bar_chart),
            label: "Informes",
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.settings),
            label: "Ajustes",
          ),
        ],
      ),
    );
  }
}